---

#- name: Role admin_users
#  set_fact:
#    admin_users: "{{admin_users}}"

#- name: Make sure we have a 'wheel' group
#  group:
#    name: wheel
#    state: present

# - set_fact:
#   list_merged: 

# with_flattened:

- name: Create groups 
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ admin_users +  autom_users }}"

- name: Create users
  user:
    shell: "/bin/bash"
    name: "{{ item }}"
    group: "{{ item }}"
    #update_password: on_create
    #password: "x" # disabled
    #groups:
    #  - wheel
    ssh_key_file: "{{lookup('file', '{{ item }}_id_ed25519.pub')}}"
  register: user_results
  with_items: "{{ admin_users +  autom_users }}"


- name: Sudo for automation user
  copy:
    content: '{{ item }} ALL=(ALL:ALL) NOPASSWD:ALL'
    dest: "/etc/sudoers.d/user_{{ item }}"
    mode: 0440
    validate: 'visudo -cf %s'
  with_items: "{{ autom_users }}"

- name: Sudo for admin users
  copy:
    content: '{{ item }} ALL=(ALL:ALL) ALL'
    dest: "/etc/sudoers.d/user_{{ item }}"
    mode: 0440
    validate: 'visudo -cf %s'
  with_items: "{{ admin_users }}"

- name: Deploy admin ssh keys to automation users
  ansible.posix.authorized_key:
    user: "{{ item[0] }}"
    state: present
    key: "{{lookup('file', '{{ item[1] }}_id_ed25519.pub')}}"
  # https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html
  # https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html
  loop: "{{ autom_users | product(admin_users) | list }}"




## Personal Flavors
- include_vars: "{{ ansible_os_family | lower }}.yml"
- include_tasks: "{{ ansible_facts['distribution'] | lower }}.yml"

